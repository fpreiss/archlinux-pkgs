# Maintainer: Fabian Preiss <fpreiss .ATT. uni-wuppertal_dot_de>

_distpkgname=OpenFOAM
_pkgname=foam-extend-4.0
pkgname=foam-extend-4.0-git
pkgver=v4.0.r187.gefcc2b1b7
pkgrel=1
pkgdesc="A fork of the OpenFOAM open source library with an extended featureset"
arch=('x86_64')
url="foam-extend.org"
license=('GPLv3')
groups=()
depends=('pacman>=5.0' 'yajl>=2.0' 'openmpi' 'qt5-base' 'python2-virtualenv')
optdepends=('python2-numpy')
makedepends=('git' 'flex' 'cmake' 'make' 'rpm-org' 'wget' 'gcc5')
source=(
  git+https://git.code.sf.net/p/foam-extend/${_pkgname}
  $pkgname.install
)
sha256sums=('SKIP'
            '08168af877871ae55ca271350ee18c7359db2c5e55f2ae1e9337f298e65deeb4'
)


pkgver(){
  cd "$srcdir/${_pkgname}"
  # Get the version number.
  git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare(){
  export FOAM_INST_DIR=${srcdir}
  cd "$srcdir/${_pkgname}"
  sed -i '1s/^/echo Bash file is being sourced\n/' etc/bashrc
  echo 'export PATH=/usr/lib64/openmpi/bin/:$PATH' etc/bashrc
  echo 'export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib/:$LD_LIBRARY_PATH' etc/bashrc

  # create a python2 environment to be compatible with pyfoam
  virtualenv2 -p python2.7 --system-site-packages ./
  echo 'source $FOAM_INST_DIR/'${_pkgname}'/bin/activate' >> etc/bashrc
  # we initialize $FOAM_INST_DIR before sourcing. No $foamInstall needed. 
  sed -i 's,foamInstall=$HOME/$WM_PROJECT,# foamInstall=$HOME/$WM_PROJECT,g' etc/bashrc
  
  cp etc/prefs.sh-EXAMPLE etc/prefs.sh
  # make QT known to foam-ext
  sed -i 's,#export QT_DIR=path_to_system_installed_qt,export QT_DIR=/usr,g' etc/prefs.sh
  sed -i 's,#export QT_BIN_DIR=$QT_DIR/bin,export QT_BIN_DIR=$QT_DIR/bin,g' etc/prefs.sh
  # use the old Bison for compatibility reasons
  sed -i 's/#WM_THIRD_PARTY_USE_BISON_27/WM_THIRD_PARTY_USE_BISON_27/g' etc/prefs.sh

  # avoid hard-coded cc and CC compiler variable
  sed -i 's/cc          = gcc -m64/cc          = $(WM_CC)/g' wmake/rules/linux64Gcc/c
  sed -i 's/CC          = g++ -m64/CC          = $(WM_CXX)/g' wmake/rules/linux64Gcc/c++
  
  ###### Start to fix some of the scripts called by Allwmake.firstInstall
  #### Fix the scripts called by AllMake.pre
  # some hot glue to make paraview compile with older gcc (does not compile with gcc6 and higher)
  sed -i 's,. $WM_PROJECT_DIR/etc/settings.sh,. $WM_PROJECT_DIR/etc/settings.sh; export WM_CXX='\''g++-5'\''; export WM_CC='\''gcc-5'\'',g' ThirdParty/AllMake.stage4
  sed -i 's,echo Done ThirdParty AllMake: Stage4,export WM_CXX='\''g++'\''; export WM_CC='\''gcc'\''; echo Done ThirdParty AllMake: Stage4,g' ThirdParty/AllMake.stage4
  #### AllMake.pre stages finished
  # use gcc5 compiler in 'src/Allwmake', where new version fails
  sed -i 's,wmake libso finiteVolume,export WM_CXX='\''g++-5'\''; export WM_CC='\''gcc-5'\''; wmake libso finiteVolume;export WM_CXX='\''g++'\''; export WM_CC='\''gcc'\'',g' src/Allwmake
  sed -i 's,wmake libso engine,export WM_CXX='\''g++-5'\''; export WM_CC='\''gcc-5'\''; wmake libso engine;export WM_CXX='\''g++'\''; export WM_CC='\''gcc'\'',g' src/Allwmake
  #### Fix the scripts called by AllMake.post
  # swak4foam needs some maintaining to compile
  sed -i 's,(cd ./rpmBuild/BUILD/swak4Foam-$SWAK_RELEASE_VERSION; ./Allwclean; ./Allwmake),(cd ./rpmBuild/BUILD/swak4Foam-$SWAK_RELEASE_VERSION; ln -s swakConfiguration.automatic swakConfiguration; ./maintainanceScripts/compileRequirements.sh; ./Allwclean; ./Allwmake),g' ThirdParty/AllMake.stage5
}

build(){
  export FOAM_INST_DIR=${srcdir}  
  foamDotFile=${srcdir}/${_pkgname}/etc/bashrc
  source ${foamDotFile}

  # Enter build directory
  cd ${srcdir}/${_pkgname}

  # Build and clean up OpenFOAM
  ./Allwmake.firstInstall
  ./Allwmake doc
  wclean all
  wmakeLnIncludeAll
  echo 'export SWAK4FOAM_SRC=$FOAM_INST_DIR'"/${_pkgname}"'/ThirdParty/rpmBuild/BUILD/swak4Foam-0.4.0/Libraries' >> ${srcdir}/${_pkgname}/etc/bashrc
}

package(){
  install=$pkgname.install
  # sed expression for following substitution
  local _subst="
    s|%DISTPKGNAME%|${_distpkgname}|g
    s|%PKGNAME%|${_pkgname}|g
  "
  # hack to allow specifying an initially nonexisting install file
  sed "${_subst}" "${startdir}/${install}" > "${startdir}/${install}.pkg"
  true && install=${install}.pkg

  cd ${srcdir}

  # Create destination directories
  install -d ${pkgdir}/opt/${_distpkgname}

  # copy package to pkgdir
  cp -r ${srcdir}/${_pkgname} ${pkgdir}/opt/${_distpkgname}
  cp -r ${srcdir}/site ${pkgdir}/opt/${_distpkgname}

  # Permission fixes - for system-wide install and use
  chmod -R go+r ${pkgdir}/opt
  chmod -R 755 ${pkgdir}/opt/${_distpkgname}/${_pkgname}/bin
  chmod -R 755 ${pkgdir}/opt/${_distpkgname}/${_pkgname}/etc
}
